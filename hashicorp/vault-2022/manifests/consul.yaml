---
# Source: consul/templates/connect-injector-disruptionbudget.yaml
# PodDisruptionBudget to prevent degrading the connectInject cluster through
# voluntary cluster changes.
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: consul-consul-connect-injector
  namespace: vault
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: connect-injector
spec:
  maxUnavailable: 0
  selector:
    matchLabels:
      app: consul
      release: "consul"
      component: connect-injector
---
# Source: consul/templates/server-disruptionbudget.yaml
# PodDisruptionBudget to prevent degrading the server cluster through
# voluntary cluster changes.
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: consul-consul-server
  namespace: vault
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: server
spec:
  maxUnavailable: 0
  selector:
    matchLabels:
      app: consul
      release: "consul"
      component: server
---
# Source: consul/templates/client-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: consul-consul-client
  namespace: vault
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: client
---
# Source: consul/templates/connect-inject-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: consul-consul-connect-injector
  namespace: vault
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: connect-injector
---
# Source: consul/templates/server-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: consul-consul-server
  namespace: vault
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: server
---
# Source: consul/templates/webhook-cert-manager-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: consul-consul-webhook-cert-manager
  namespace: vault
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: webhook-cert-manager
---
# Source: consul/templates/client-config-configmap.yaml
# ConfigMap with extra configuration specified directly to the chart
# for client agents only.
apiVersion: v1
kind: ConfigMap
metadata:
  name: consul-consul-client-config
  namespace: vault
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: client
data:
  client.json: |-
    {
    }
  extra-from-values.json: |-
    {}
    
  central-config.json: |-
    {
      "enable_central_service_config": true
    }
  
  config.json: |-
    {
      "check_update_interval": "0s"
    }
---
# Source: consul/templates/server-config-configmap.yaml
# StatefulSet to run the actual Consul server cluster.
apiVersion: v1
kind: ConfigMap
metadata:
  name: consul-consul-server-config
  namespace: vault
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: server
data:
  server.json: |
    {
      "bind_addr": "0.0.0.0",
      "bootstrap_expect": 1,
      "client_addr": "0.0.0.0",
      "connect": {
        "enabled": true
      },
      "datacenter": "vault-kubernetes-guide",
      "data_dir": "/consul/data",
      "domain": "consul",
      "ports": {
        "grpc": 8502,
        "grpc_tls": -1,
        "serf_lan": 8301
      },
      "recursors": [],
      "retry_join": ["consul-consul-server.vault.svc:8301"],
      "server": true
    }
  extra-from-values.json: |-
    {}
    
  ui-config.json: |-
    {
      "ui_config": {
        "enabled": true
      }
    }
  central-config.json: |-
    {
      "enable_central_service_config": true
    }
---
# Source: consul/templates/webhook-cert-manager-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: consul-consul-webhook-cert-manager-config
  namespace: vault
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: webhook-cert-manager
data:
  webhook-config.json: |-
    [
      {
        "name": "consul-consul-connect-injector",
        "tlsAutoHosts": [
          "consul-consul-connect-injector",
          "consul-consul-connect-injector.vault",
          "consul-consul-connect-injector.vault.svc",
          "consul-consul-connect-injector.vault.svc.cluster.local"
        ],
        "secretName": "consul-consul-connect-inject-webhook-cert",
        "secretNamespace": "vault"
      }
    ]
---
# Source: consul/templates/crd-exportedservices.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: exportedservices.consul.hashicorp.com
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: crd
spec:
  group: consul.hashicorp.com
  names:
    kind: ExportedServices
    listKind: ExportedServicesList
    plural: exportedservices
    shortNames:
    - exported-services
    singular: exportedservices
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The sync status of the resource with Consul
      jsonPath: .status.conditions[?(@.type=="Synced")].status
      name: Synced
      type: string
    - description: The last successful synced time of the resource with Consul
      jsonPath: .status.lastSyncedTime
      name: Last Synced
      type: date
    - description: The age of the resource
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ExportedServices is the Schema for the exportedservices API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ExportedServicesSpec defines the desired state of ExportedServices.
            properties:
              services:
                description: Services is a list of services to be exported and the
                  list of partitions to expose them to.
                items:
                  description: ExportedService manages the exporting of a service
                    in the local partition to other partitions.
                  properties:
                    consumers:
                      description: Consumers is a list of downstream consumers of
                        the service to be exported.
                      items:
                        description: ServiceConsumer represents a downstream consumer
                          of the service to be exported.
                        properties:
                          partition:
                            description: Partition is the admin partition to export
                              the service to.
                            type: string
                          peer:
                            description: '[Experimental] Peer is the name of the peer
                              to export the service to.'
                            type: string
                        type: object
                      type: array
                    name:
                      description: Name is the name of the service to be exported.
                      type: string
                    namespace:
                      description: Namespace is the namespace to export the service
                        from.
                      type: string
                  type: object
                type: array
            type: object
          status:
            properties:
              conditions:
                description: Conditions indicate the latest available observations
                  of a resource's current state.
                items:
                  description: 'Conditions define a readiness condition for a Consul
                    resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              lastSyncedTime:
                description: LastSyncedTime is the last time the resource successfully
                  synced with Consul.
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: consul/templates/crd-ingressgateways.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: ingressgateways.consul.hashicorp.com
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: crd
spec:
  group: consul.hashicorp.com
  names:
    kind: IngressGateway
    listKind: IngressGatewayList
    plural: ingressgateways
    shortNames:
    - ingress-gateway
    singular: ingressgateway
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The sync status of the resource with Consul
      jsonPath: .status.conditions[?(@.type=="Synced")].status
      name: Synced
      type: string
    - description: The last successful synced time of the resource with Consul
      jsonPath: .status.lastSyncedTime
      name: Last Synced
      type: date
    - description: The age of the resource
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: IngressGateway is the Schema for the ingressgateways API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IngressGatewaySpec defines the desired state of IngressGateway.
            properties:
              defaults:
                description: Defaults is default configuration for all upstream services
                properties:
                  maxConcurrentRequests:
                    description: The maximum number of concurrent requests that will
                      be allowed at a single point in time. Use this to limit HTTP/2
                      traffic, since HTTP/2 has many requests per connection.
                    format: int32
                    type: integer
                  maxConnections:
                    description: The maximum number of connections a service instance
                      will be allowed to establish against the given upstream. Use
                      this to limit HTTP/1.1 traffic, since HTTP/1.1 has a request
                      per connection.
                    format: int32
                    type: integer
                  maxPendingRequests:
                    description: The maximum number of requests that will be queued
                      while waiting for a connection to be established.
                    format: int32
                    type: integer
                type: object
              listeners:
                description: Listeners declares what ports the ingress gateway should
                  listen on, and what services to associated to those ports.
                items:
                  description: IngressListener manages the configuration for a listener
                    on a specific port.
                  properties:
                    port:
                      description: Port declares the port on which the ingress gateway
                        should listen for traffic.
                      type: integer
                    protocol:
                      description: 'Protocol declares what type of traffic this listener
                        is expected to receive. Depending on the protocol, a listener
                        might support multiplexing services over a single port, or
                        additional discovery chain features. The current supported
                        values are: (tcp | http | http2 | grpc).'
                      type: string
                    services:
                      description: Services declares the set of services to which
                        the listener forwards traffic. For "tcp" protocol listeners,
                        only a single service is allowed. For "http" listeners, multiple
                        services can be declared.
                      items:
                        description: IngressService manages configuration for services
                          that are exposed to ingress traffic.
                        properties:
                          hosts:
                            description: "Hosts is a list of hostnames which should
                              be associated to this service on the defined listener.
                              Only allowed on layer 7 protocols, this will be used
                              to route traffic to the service by matching the Host
                              header of the HTTP request. \n If a host is provided
                              for a service that also has a wildcard specifier defined,
                              the host will override the wildcard-specifier-provided
                              \"<service-name>.*\" domain for that listener. \n This
                              cannot be specified when using the wildcard specifier,
                              \"*\", or when using a \"tcp\" listener."
                            items:
                              type: string
                            type: array
                          maxConcurrentRequests:
                            description: The maximum number of concurrent requests
                              that will be allowed at a single point in time. Use
                              this to limit HTTP/2 traffic, since HTTP/2 has many
                              requests per connection.
                            format: int32
                            type: integer
                          maxConnections:
                            description: The maximum number of connections a service
                              instance will be allowed to establish against the given
                              upstream. Use this to limit HTTP/1.1 traffic, since
                              HTTP/1.1 has a request per connection.
                            format: int32
                            type: integer
                          maxPendingRequests:
                            description: The maximum number of requests that will
                              be queued while waiting for a connection to be established.
                            format: int32
                            type: integer
                          name:
                            description: "Name declares the service to which traffic
                              should be forwarded. \n This can either be a specific
                              service, or the wildcard specifier, \"*\". If the wildcard
                              specifier is provided, the listener must be of \"http\"
                              protocol and means that the listener will forward traffic
                              to all services. \n A name can be specified on multiple
                              listeners, and will be exposed on both of the listeners."
                            type: string
                          namespace:
                            description: Namespace is the namespace where the service
                              is located. Namespacing is a Consul Enterprise feature.
                            type: string
                          partition:
                            description: Partition is the admin-partition where the
                              service is located. Partitioning is a Consul Enterprise
                              feature.
                            type: string
                          requestHeaders:
                            description: Allow HTTP header manipulation to be configured.
                            properties:
                              add:
                                additionalProperties:
                                  type: string
                                description: Add is a set of name -> value pairs that
                                  should be appended to the request or response (i.e.
                                  allowing duplicates if the same header already exists).
                                type: object
                              remove:
                                description: Remove is the set of header names that
                                  should be stripped from the request or response.
                                items:
                                  type: string
                                type: array
                              set:
                                additionalProperties:
                                  type: string
                                description: Set is a set of name -> value pairs that
                                  should be added to the request or response, overwriting
                                  any existing header values of the same name.
                                type: object
                            type: object
                          responseHeaders:
                            description: HTTPHeaderModifiers is a set of rules for
                              HTTP header modification that should be performed by
                              proxies as the request passes through them. It can operate
                              on either request or response headers depending on the
                              context in which it is used.
                            properties:
                              add:
                                additionalProperties:
                                  type: string
                                description: Add is a set of name -> value pairs that
                                  should be appended to the request or response (i.e.
                                  allowing duplicates if the same header already exists).
                                type: object
                              remove:
                                description: Remove is the set of header names that
                                  should be stripped from the request or response.
                                items:
                                  type: string
                                type: array
                              set:
                                additionalProperties:
                                  type: string
                                description: Set is a set of name -> value pairs that
                                  should be added to the request or response, overwriting
                                  any existing header values of the same name.
                                type: object
                            type: object
                          tls:
                            description: TLS allows specifying some TLS configuration
                              per listener.
                            properties:
                              sds:
                                description: SDS allows configuring TLS certificate
                                  from an SDS service.
                                properties:
                                  certResource:
                                    description: CertResource is the SDS resource
                                      name to request when fetching the certificate
                                      from the SDS service.
                                    type: string
                                  clusterName:
                                    description: ClusterName is the SDS cluster name
                                      to connect to, to retrieve certificates. This
                                      cluster must be specified in the Gateway's bootstrap
                                      configuration.
                                    type: string
                                type: object
                            type: object
                        type: object
                      type: array
                    tls:
                      description: TLS config for this listener.
                      properties:
                        cipherSuites:
                          description: Define a subset of cipher suites to restrict
                            Only applicable to connections negotiated via TLS 1.2
                            or earlier.
                          items:
                            type: string
                          type: array
                        enabled:
                          description: Indicates that TLS should be enabled for this
                            gateway service.
                          type: boolean
                        sds:
                          description: SDS allows configuring TLS certificate from
                            an SDS service.
                          properties:
                            certResource:
                              description: CertResource is the SDS resource name to
                                request when fetching the certificate from the SDS
                                service.
                              type: string
                            clusterName:
                              description: ClusterName is the SDS cluster name to
                                connect to, to retrieve certificates. This cluster
                                must be specified in the Gateway's bootstrap configuration.
                              type: string
                          type: object
                        tlsMaxVersion:
                          description: TLSMaxVersion sets the default maximum TLS
                            version supported. Must be greater than or equal to `TLSMinVersion`.
                            One of `TLS_AUTO`, `TLSv1_0`, `TLSv1_1`, `TLSv1_2`, or
                            `TLSv1_3`. If unspecified, Envoy will default to TLS 1.3
                            as a max version for incoming connections.
                          type: string
                        tlsMinVersion:
                          description: TLSMinVersion sets the default minimum TLS
                            version supported. One of `TLS_AUTO`, `TLSv1_0`, `TLSv1_1`,
                            `TLSv1_2`, or `TLSv1_3`. If unspecified, Envoy v1.22.0
                            and newer will default to TLS 1.2 as a min version, while
                            older releases of Envoy default to TLS 1.0.
                          type: string
                      required:
                      - enabled
                      type: object
                  type: object
                type: array
              tls:
                description: TLS holds the TLS configuration for this gateway.
                properties:
                  cipherSuites:
                    description: Define a subset of cipher suites to restrict Only
                      applicable to connections negotiated via TLS 1.2 or earlier.
                    items:
                      type: string
                    type: array
                  enabled:
                    description: Indicates that TLS should be enabled for this gateway
                      service.
                    type: boolean
                  sds:
                    description: SDS allows configuring TLS certificate from an SDS
                      service.
                    properties:
                      certResource:
                        description: CertResource is the SDS resource name to request
                          when fetching the certificate from the SDS service.
                        type: string
                      clusterName:
                        description: ClusterName is the SDS cluster name to connect
                          to, to retrieve certificates. This cluster must be specified
                          in the Gateway's bootstrap configuration.
                        type: string
                    type: object
                  tlsMaxVersion:
                    description: TLSMaxVersion sets the default maximum TLS version
                      supported. Must be greater than or equal to `TLSMinVersion`.
                      One of `TLS_AUTO`, `TLSv1_0`, `TLSv1_1`, `TLSv1_2`, or `TLSv1_3`.
                      If unspecified, Envoy will default to TLS 1.3 as a max version
                      for incoming connections.
                    type: string
                  tlsMinVersion:
                    description: TLSMinVersion sets the default minimum TLS version
                      supported. One of `TLS_AUTO`, `TLSv1_0`, `TLSv1_1`, `TLSv1_2`,
                      or `TLSv1_3`. If unspecified, Envoy v1.22.0 and newer will default
                      to TLS 1.2 as a min version, while older releases of Envoy default
                      to TLS 1.0.
                    type: string
                required:
                - enabled
                type: object
            type: object
          status:
            properties:
              conditions:
                description: Conditions indicate the latest available observations
                  of a resource's current state.
                items:
                  description: 'Conditions define a readiness condition for a Consul
                    resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              lastSyncedTime:
                description: LastSyncedTime is the last time the resource successfully
                  synced with Consul.
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: consul/templates/crd-meshes.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: meshes.consul.hashicorp.com
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: crd
spec:
  group: consul.hashicorp.com
  names:
    kind: Mesh
    listKind: MeshList
    plural: meshes
    singular: mesh
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The sync status of the resource with Consul
      jsonPath: .status.conditions[?(@.type=="Synced")].status
      name: Synced
      type: string
    - description: The last successful synced time of the resource with Consul
      jsonPath: .status.lastSyncedTime
      name: Last Synced
      type: date
    - description: The age of the resource
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Mesh is the Schema for the mesh API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MeshSpec defines the desired state of Mesh.
            properties:
              http:
                description: HTTP defines the HTTP configuration for the service mesh.
                properties:
                  sanitizeXForwardedClientCert:
                    type: boolean
                required:
                - sanitizeXForwardedClientCert
                type: object
              peering:
                description: Peering defines the peering configuration for the service
                  mesh.
                properties:
                  peerThroughMeshGateways:
                    description: PeerThroughMeshGateways determines whether peering
                      traffic between control planes should flow through mesh gateways.
                      If enabled, Consul servers will advertise mesh gateway addresses
                      as their own. Additionally, mesh gateways will configure themselves
                      to expose the local servers using a peering-specific SNI.
                    type: boolean
                type: object
              tls:
                description: TLS defines the TLS configuration for the service mesh.
                properties:
                  incoming:
                    description: Incoming defines the TLS configuration for inbound
                      mTLS connections targeting the public listener on Connect and
                      TerminatingGateway proxy kinds.
                    properties:
                      cipherSuites:
                        description: CipherSuites sets the default list of TLS cipher
                          suites to support when negotiating connections using TLS
                          1.2 or earlier. If unspecified, Envoy will use a default
                          server cipher list. The list of supported cipher suites
                          can be seen in https://github.com/hashicorp/consul/blob/v1.11.2/types/tls.go#L154-L169
                          and is dependent on underlying support in Envoy. Future
                          releases of Envoy may remove currently-supported but insecure
                          cipher suites, and future releases of Consul may add new
                          supported cipher suites if any are added to Envoy.
                        items:
                          type: string
                        type: array
                      tlsMaxVersion:
                        description: TLSMaxVersion sets the default maximum TLS version
                          supported. Must be greater than or equal to `TLSMinVersion`.
                          One of `TLS_AUTO`, `TLSv1_0`, `TLSv1_1`, `TLSv1_2`, or `TLSv1_3`.
                          If unspecified, Envoy will default to TLS 1.3 as a max version
                          for incoming connections.
                        type: string
                      tlsMinVersion:
                        description: TLSMinVersion sets the default minimum TLS version
                          supported. One of `TLS_AUTO`, `TLSv1_0`, `TLSv1_1`, `TLSv1_2`,
                          or `TLSv1_3`. If unspecified, Envoy v1.22.0 and newer will
                          default to TLS 1.2 as a min version, while older releases
                          of Envoy default to TLS 1.0.
                        type: string
                    type: object
                  outgoing:
                    description: Outgoing defines the TLS configuration for outbound
                      mTLS connections dialing upstreams from Connect and IngressGateway
                      proxy kinds.
                    properties:
                      cipherSuites:
                        description: CipherSuites sets the default list of TLS cipher
                          suites to support when negotiating connections using TLS
                          1.2 or earlier. If unspecified, Envoy will use a default
                          server cipher list. The list of supported cipher suites
                          can be seen in https://github.com/hashicorp/consul/blob/v1.11.2/types/tls.go#L154-L169
                          and is dependent on underlying support in Envoy. Future
                          releases of Envoy may remove currently-supported but insecure
                          cipher suites, and future releases of Consul may add new
                          supported cipher suites if any are added to Envoy.
                        items:
                          type: string
                        type: array
                      tlsMaxVersion:
                        description: TLSMaxVersion sets the default maximum TLS version
                          supported. Must be greater than or equal to `TLSMinVersion`.
                          One of `TLS_AUTO`, `TLSv1_0`, `TLSv1_1`, `TLSv1_2`, or `TLSv1_3`.
                          If unspecified, Envoy will default to TLS 1.3 as a max version
                          for incoming connections.
                        type: string
                      tlsMinVersion:
                        description: TLSMinVersion sets the default minimum TLS version
                          supported. One of `TLS_AUTO`, `TLSv1_0`, `TLSv1_1`, `TLSv1_2`,
                          or `TLSv1_3`. If unspecified, Envoy v1.22.0 and newer will
                          default to TLS 1.2 as a min version, while older releases
                          of Envoy default to TLS 1.0.
                        type: string
                    type: object
                type: object
              transparentProxy:
                description: TransparentProxy controls the configuration specific
                  to proxies in "transparent" mode. Added in v1.10.0.
                properties:
                  meshDestinationsOnly:
                    description: MeshDestinationsOnly determines whether sidecar proxies
                      operating in "transparent" mode can proxy traffic to IP addresses
                      not registered in Consul's catalog. If enabled, traffic will
                      only be proxied to upstreams with service registrations in the
                      catalog.
                    type: boolean
                type: object
            type: object
          status:
            properties:
              conditions:
                description: Conditions indicate the latest available observations
                  of a resource's current state.
                items:
                  description: 'Conditions define a readiness condition for a Consul
                    resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              lastSyncedTime:
                description: LastSyncedTime is the last time the resource successfully
                  synced with Consul.
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: consul/templates/crd-proxydefaults.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: proxydefaults.consul.hashicorp.com
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: crd
spec:
  group: consul.hashicorp.com
  names:
    kind: ProxyDefaults
    listKind: ProxyDefaultsList
    plural: proxydefaults
    shortNames:
    - proxy-defaults
    singular: proxydefaults
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The sync status of the resource with Consul
      jsonPath: .status.conditions[?(@.type=="Synced")].status
      name: Synced
      type: string
    - description: The last successful synced time of the resource with Consul
      jsonPath: .status.lastSyncedTime
      name: Last Synced
      type: date
    - description: The age of the resource
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ProxyDefaults is the Schema for the proxydefaults API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ProxyDefaultsSpec defines the desired state of ProxyDefaults.
            properties:
              accessLogs:
                description: AccessLogs controls all envoy instances' access logging
                  configuration.
                properties:
                  disableListenerLogs:
                    description: DisableListenerLogs turns off just listener logs
                      for connections rejected by Envoy because they don't have a
                      matching listener filter.
                    type: boolean
                  enabled:
                    description: Enabled turns on all access logging
                    type: boolean
                  jsonFormat:
                    description: 'JSONFormat is a JSON-formatted string of an Envoy
                      access log format dictionary. See for more info on formatting:
                      https://www.envoyproxy.io/docs/envoy/latest/configuration/observability/access_log/usage#format-dictionaries
                      Defining JSONFormat and TextFormat is invalid.'
                    type: string
                  path:
                    description: Path is the output file to write logs for file-type
                      logging
                    type: string
                  textFormat:
                    description: 'TextFormat is a representation of Envoy access logs
                      format. See for more info on formatting: https://www.envoyproxy.io/docs/envoy/latest/configuration/observability/access_log/usage#format-strings
                      Defining JSONFormat and TextFormat is invalid.'
                    type: string
                  type:
                    description: Type selects the output for logs one of "file", "stderr".
                      "stdout"
                    type: string
                type: object
              config:
                description: Config is an arbitrary map of configuration values used
                  by Connect proxies. Any values that your proxy allows can be configured
                  globally here. Supports JSON config values. See https://www.consul.io/docs/connect/proxies/envoy#configuration-formatting
                type: object
                x-kubernetes-preserve-unknown-fields: true
              envoyExtensions:
                description: EnvoyExtensions are a list of extensions to modify Envoy
                  proxy configuration.
                items:
                  description: EnvoyExtension has configuration for an extension that
                    patches Envoy resources.
                  properties:
                    arguments:
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    name:
                      type: string
                    required:
                      type: boolean
                  type: object
                type: array
              expose:
                description: Expose controls the default expose path configuration
                  for Envoy.
                properties:
                  checks:
                    description: Checks defines whether paths associated with Consul
                      checks will be exposed. This flag triggers exposing all HTTP
                      and GRPC check paths registered for the service.
                    type: boolean
                  paths:
                    description: Paths is the list of paths exposed through the proxy.
                    items:
                      properties:
                        listenerPort:
                          description: ListenerPort defines the port of the proxy's
                            listener for exposed paths.
                          type: integer
                        localPathPort:
                          description: LocalPathPort is the port that the service
                            is listening on for the given path.
                          type: integer
                        path:
                          description: Path is the path to expose through the proxy,
                            ie. "/metrics".
                          type: string
                        protocol:
                          description: Protocol describes the upstream's service protocol.
                            Valid values are "http" and "http2", defaults to "http".
                          type: string
                      type: object
                    type: array
                type: object
              meshGateway:
                description: MeshGateway controls the default mesh gateway configuration
                  for this service.
                properties:
                  mode:
                    description: Mode is the mode that should be used for the upstream
                      connection. One of none, local, or remote.
                    type: string
                type: object
              mode:
                description: 'Mode can be one of "direct" or "transparent". "transparent"
                  represents that inbound and outbound application traffic is being
                  captured and redirected through the proxy. This mode does not enable
                  the traffic redirection itself. Instead it signals Consul to configure
                  Envoy as if traffic is already being redirected. "direct" represents
                  that the proxy''s listeners must be dialed directly by the local
                  application and other proxies. Note: This cannot be set using the
                  CRD and should be set using annotations on the services that are
                  part of the mesh.'
                type: string
              transparentProxy:
                description: 'TransparentProxy controls configuration specific to
                  proxies in transparent mode. Note: This cannot be set using the
                  CRD and should be set using annotations on the services that are
                  part of the mesh.'
                properties:
                  dialedDirectly:
                    description: DialedDirectly indicates whether transparent proxies
                      can dial this proxy instance directly. The discovery chain is
                      not considered when dialing a service instance directly. This
                      setting is useful when addressing stateful services, such as
                      a database cluster with a leader node.
                    type: boolean
                  outboundListenerPort:
                    description: OutboundListenerPort is the port of the listener
                      where outbound application traffic is being redirected to.
                    type: integer
                type: object
            type: object
          status:
            properties:
              conditions:
                description: Conditions indicate the latest available observations
                  of a resource's current state.
                items:
                  description: 'Conditions define a readiness condition for a Consul
                    resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              lastSyncedTime:
                description: LastSyncedTime is the last time the resource successfully
                  synced with Consul.
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: consul/templates/crd-servicedefaults.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: servicedefaults.consul.hashicorp.com
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: crd
spec:
  group: consul.hashicorp.com
  names:
    kind: ServiceDefaults
    listKind: ServiceDefaultsList
    plural: servicedefaults
    shortNames:
    - service-defaults
    singular: servicedefaults
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The sync status of the resource with Consul
      jsonPath: .status.conditions[?(@.type=="Synced")].status
      name: Synced
      type: string
    - description: The last successful synced time of the resource with Consul
      jsonPath: .status.lastSyncedTime
      name: Last Synced
      type: date
    - description: The age of the resource
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ServiceDefaults is the Schema for the servicedefaults API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ServiceDefaultsSpec defines the desired state of ServiceDefaults.
            properties:
              balanceInboundConnections:
                description: BalanceInboundConnections sets the strategy for allocating
                  inbound connections to the service across proxy threads. The only
                  supported value is exact_balance. By default, no connection balancing
                  is used. Refer to the Envoy Connection Balance config for details.
                type: string
              destination:
                description: Destination is an address(es)/port combination that represents
                  an endpoint outside the mesh. This is only valid when the mesh is
                  configured in "transparent" mode. Destinations live outside of Consul's
                  catalog, and because of this, they do not require an artificial
                  node to be created.
                properties:
                  addresses:
                    description: Addresses is a list of IPs and/or hostnames that
                      can be dialed and routed through a terminating gateway.
                    items:
                      type: string
                    type: array
                  port:
                    description: Port is the port that can be dialed on any of the
                      addresses in this Destination.
                    format: int32
                    type: integer
                type: object
              envoyExtensions:
                description: EnvoyExtensions are a list of extensions to modify Envoy
                  proxy configuration.
                items:
                  description: EnvoyExtension has configuration for an extension that
                    patches Envoy resources.
                  properties:
                    arguments:
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    name:
                      type: string
                    required:
                      type: boolean
                  type: object
                type: array
              expose:
                description: Expose controls the default expose path configuration
                  for Envoy.
                properties:
                  checks:
                    description: Checks defines whether paths associated with Consul
                      checks will be exposed. This flag triggers exposing all HTTP
                      and GRPC check paths registered for the service.
                    type: boolean
                  paths:
                    description: Paths is the list of paths exposed through the proxy.
                    items:
                      properties:
                        listenerPort:
                          description: ListenerPort defines the port of the proxy's
                            listener for exposed paths.
                          type: integer
                        localPathPort:
                          description: LocalPathPort is the port that the service
                            is listening on for the given path.
                          type: integer
                        path:
                          description: Path is the path to expose through the proxy,
                            ie. "/metrics".
                          type: string
                        protocol:
                          description: Protocol describes the upstream's service protocol.
                            Valid values are "http" and "http2", defaults to "http".
                          type: string
                      type: object
                    type: array
                type: object
              externalSNI:
                description: ExternalSNI is an optional setting that allows for the
                  TLS SNI value to be changed to a non-connect value when federating
                  with an external system.
                type: string
              localConnectTimeoutMs:
                description: LocalConnectTimeoutMs is the number of milliseconds allowed
                  to make connections to the local application instance before timing
                  out. Defaults to 5000.
                type: integer
              localRequestTimeoutMs:
                description: LocalRequestTimeoutMs is the timeout for HTTP requests
                  to the local application instance in milliseconds. Applies to HTTP-based
                  protocols only. If not specified, inherits the Envoy default for
                  route timeouts (15s).
                type: integer
              maxInboundConnections:
                description: MaxInboundConnections is the maximum number of concurrent
                  inbound connections to each service instance. Defaults to 0 (using
                  consul's default) if not set.
                type: integer
              meshGateway:
                description: MeshGateway controls the default mesh gateway configuration
                  for this service.
                properties:
                  mode:
                    description: Mode is the mode that should be used for the upstream
                      connection. One of none, local, or remote.
                    type: string
                type: object
              mode:
                description: 'Mode can be one of "direct" or "transparent". "transparent"
                  represents that inbound and outbound application traffic is being
                  captured and redirected through the proxy. This mode does not enable
                  the traffic redirection itself. Instead it signals Consul to configure
                  Envoy as if traffic is already being redirected. "direct" represents
                  that the proxy''s listeners must be dialed directly by the local
                  application and other proxies. Note: This cannot be set using the
                  CRD and should be set using annotations on the services that are
                  part of the mesh.'
                type: string
              protocol:
                description: Protocol sets the protocol of the service. This is used
                  by Connect proxies for things like observability features and to
                  unlock usage of the service-splitter and service-router config entries
                  for a service.
                type: string
              transparentProxy:
                description: 'TransparentProxy controls configuration specific to
                  proxies in transparent mode. Note: This cannot be set using the
                  CRD and should be set using annotations on the services that are
                  part of the mesh.'
                properties:
                  dialedDirectly:
                    description: DialedDirectly indicates whether transparent proxies
                      can dial this proxy instance directly. The discovery chain is
                      not considered when dialing a service instance directly. This
                      setting is useful when addressing stateful services, such as
                      a database cluster with a leader node.
                    type: boolean
                  outboundListenerPort:
                    description: OutboundListenerPort is the port of the listener
                      where outbound application traffic is being redirected to.
                    type: integer
                type: object
              upstreamConfig:
                description: UpstreamConfig controls default configuration settings
                  that apply across all upstreams, and per-upstream configuration
                  overrides. Note that per-upstream configuration applies across all
                  federated datacenters to the pairing of source and upstream destination
                  services.
                properties:
                  defaults:
                    description: Defaults contains default configuration for all upstreams
                      of a given service. The name field must be empty.
                    properties:
                      connectTimeoutMs:
                        description: ConnectTimeoutMs is the number of milliseconds
                          to timeout making a new connection to this upstream. Defaults
                          to 5000 (5 seconds) if not set.
                        type: integer
                      envoyClusterJSON:
                        description: 'EnvoyClusterJSON is a complete override ("escape
                          hatch") for the upstream''s cluster. The Connect client
                          TLS certificate and context will be injected overriding
                          any TLS settings present. Note: This escape hatch is NOT
                          compatible with the discovery chain and will be ignored
                          if a discovery chain is active.'
                        type: string
                      envoyListenerJSON:
                        description: 'EnvoyListenerJSON is a complete override ("escape
                          hatch") for the upstream''s listener. Note: This escape
                          hatch is NOT compatible with the discovery chain and will
                          be ignored if a discovery chain is active.'
                        type: string
                      limits:
                        description: Limits are the set of limits that are applied
                          to the proxy for a specific upstream of a service instance.
                        properties:
                          maxConcurrentRequests:
                            description: MaxConcurrentRequests is the maximum number
                              of in-flight requests that will be allowed to the upstream
                              cluster at a point in time. This is mostly applicable
                              to HTTP/2 clusters since all HTTP/1.1 requests are limited
                              by MaxConnections.
                            type: integer
                          maxConnections:
                            description: MaxConnections is the maximum number of connections
                              the local proxy can make to the upstream service.
                            type: integer
                          maxPendingRequests:
                            description: MaxPendingRequests is the maximum number
                              of requests that will be queued waiting for an available
                              connection. This is mostly applicable to HTTP/1.1 clusters
                              since all HTTP/2 requests are streamed over a single
                              connection.
                            type: integer
                        type: object
                      meshGateway:
                        description: MeshGatewayConfig controls how Mesh Gateways
                          are configured and used.
                        properties:
                          mode:
                            description: Mode is the mode that should be used for
                              the upstream connection. One of none, local, or remote.
                            type: string
                        type: object
                      name:
                        description: Name is only accepted within service ServiceDefaultsSpec.UpstreamConfig.Overrides
                          config entry.
                        type: string
                      namespace:
                        description: Namespace is only accepted within service ServiceDefaultsSpec.UpstreamConfig.Overrides
                          config entry.
                        type: string
                      partition:
                        description: Partition is only accepted within service ServiceDefaultsSpec.UpstreamConfig.Overrides
                          config entry.
                        type: string
                      passiveHealthCheck:
                        description: PassiveHealthCheck configuration determines how
                          upstream proxy instances will be monitored for removal from
                          the load balancing pool.
                        properties:
                          enforcing_consecutive_5xx:
                            description: EnforcingConsecutive5xx is the % chance that
                              a host will be actually ejected when an outlier status
                              is detected through consecutive 5xx. This setting can
                              be used to disable ejection or to ramp it up slowly.
                            format: int32
                            type: integer
                          interval:
                            description: Interval between health check analysis sweeps.
                              Each sweep may remove hosts or return hosts to the pool.
                            type: string
                          maxFailures:
                            description: MaxFailures is the count of consecutive failures
                              that results in a host being removed from the pool.
                            format: int32
                            type: integer
                        type: object
                      peer:
                        description: Peer is only accepted within service ServiceDefaultsSpec.UpstreamConfig.Overrides
                          config entry.
                        type: string
                      protocol:
                        description: Protocol describes the upstream's service protocol.
                          Valid values are "tcp", "http" and "grpc". Anything else
                          is treated as tcp. This enables protocol aware features
                          like per-request metrics and connection pooling, tracing,
                          routing etc.
                        type: string
                    type: object
                  overrides:
                    description: Overrides is a slice of per-service configuration.
                      The name field is required.
                    items:
                      properties:
                        connectTimeoutMs:
                          description: ConnectTimeoutMs is the number of milliseconds
                            to timeout making a new connection to this upstream. Defaults
                            to 5000 (5 seconds) if not set.
                          type: integer
                        envoyClusterJSON:
                          description: 'EnvoyClusterJSON is a complete override ("escape
                            hatch") for the upstream''s cluster. The Connect client
                            TLS certificate and context will be injected overriding
                            any TLS settings present. Note: This escape hatch is NOT
                            compatible with the discovery chain and will be ignored
                            if a discovery chain is active.'
                          type: string
                        envoyListenerJSON:
                          description: 'EnvoyListenerJSON is a complete override ("escape
                            hatch") for the upstream''s listener. Note: This escape
                            hatch is NOT compatible with the discovery chain and will
                            be ignored if a discovery chain is active.'
                          type: string
                        limits:
                          description: Limits are the set of limits that are applied
                            to the proxy for a specific upstream of a service instance.
                          properties:
                            maxConcurrentRequests:
                              description: MaxConcurrentRequests is the maximum number
                                of in-flight requests that will be allowed to the
                                upstream cluster at a point in time. This is mostly
                                applicable to HTTP/2 clusters since all HTTP/1.1 requests
                                are limited by MaxConnections.
                              type: integer
                            maxConnections:
                              description: MaxConnections is the maximum number of
                                connections the local proxy can make to the upstream
                                service.
                              type: integer
                            maxPendingRequests:
                              description: MaxPendingRequests is the maximum number
                                of requests that will be queued waiting for an available
                                connection. This is mostly applicable to HTTP/1.1
                                clusters since all HTTP/2 requests are streamed over
                                a single connection.
                              type: integer
                          type: object
                        meshGateway:
                          description: MeshGatewayConfig controls how Mesh Gateways
                            are configured and used.
                          properties:
                            mode:
                              description: Mode is the mode that should be used for
                                the upstream connection. One of none, local, or remote.
                              type: string
                          type: object
                        name:
                          description: Name is only accepted within service ServiceDefaultsSpec.UpstreamConfig.Overrides
                            config entry.
                          type: string
                        namespace:
                          description: Namespace is only accepted within service ServiceDefaultsSpec.UpstreamConfig.Overrides
                            config entry.
                          type: string
                        partition:
                          description: Partition is only accepted within service ServiceDefaultsSpec.UpstreamConfig.Overrides
                            config entry.
                          type: string
                        passiveHealthCheck:
                          description: PassiveHealthCheck configuration determines
                            how upstream proxy instances will be monitored for removal
                            from the load balancing pool.
                          properties:
                            enforcing_consecutive_5xx:
                              description: EnforcingConsecutive5xx is the % chance
                                that a host will be actually ejected when an outlier
                                status is detected through consecutive 5xx. This setting
                                can be used to disable ejection or to ramp it up slowly.
                              format: int32
                              type: integer
                            interval:
                              description: Interval between health check analysis
                                sweeps. Each sweep may remove hosts or return hosts
                                to the pool.
                              type: string
                            maxFailures:
                              description: MaxFailures is the count of consecutive
                                failures that results in a host being removed from
                                the pool.
                              format: int32
                              type: integer
                          type: object
                        peer:
                          description: Peer is only accepted within service ServiceDefaultsSpec.UpstreamConfig.Overrides
                            config entry.
                          type: string
                        protocol:
                          description: Protocol describes the upstream's service protocol.
                            Valid values are "tcp", "http" and "grpc". Anything else
                            is treated as tcp. This enables protocol aware features
                            like per-request metrics and connection pooling, tracing,
                            routing etc.
                          type: string
                      type: object
                    type: array
                type: object
            type: object
          status:
            properties:
              conditions:
                description: Conditions indicate the latest available observations
                  of a resource's current state.
                items:
                  description: 'Conditions define a readiness condition for a Consul
                    resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              lastSyncedTime:
                description: LastSyncedTime is the last time the resource successfully
                  synced with Consul.
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: consul/templates/crd-serviceintentions.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: serviceintentions.consul.hashicorp.com
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: crd
spec:
  group: consul.hashicorp.com
  names:
    kind: ServiceIntentions
    listKind: ServiceIntentionsList
    plural: serviceintentions
    shortNames:
    - service-intentions
    singular: serviceintentions
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The sync status of the resource with Consul
      jsonPath: .status.conditions[?(@.type=="Synced")].status
      name: Synced
      type: string
    - description: The last successful synced time of the resource with Consul
      jsonPath: .status.lastSyncedTime
      name: Last Synced
      type: date
    - description: The age of the resource
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ServiceIntentions is the Schema for the serviceintentions API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ServiceIntentionsSpec defines the desired state of ServiceIntentions.
            properties:
              destination:
                description: Destination is the intention destination that will have
                  the authorization granted to.
                properties:
                  name:
                    description: Name is the destination of all intentions defined
                      in this config entry. This may be set to the wildcard character
                      (*) to match all services that don't otherwise have intentions
                      defined.
                    type: string
                  namespace:
                    description: Namespace specifies the namespace the config entry
                      will apply to. This may be set to the wildcard character (*)
                      to match all services in all namespaces that don't otherwise
                      have intentions defined.
                    type: string
                type: object
              sources:
                description: Sources is the list of all intention sources and the
                  authorization granted to those sources. The order of this list does
                  not matter, but out of convenience Consul will always store this
                  reverse sorted by intention precedence, as that is the order that
                  they will be evaluated at enforcement time.
                items:
                  properties:
                    action:
                      description: Action is required for an L4 intention, and should
                        be set to one of "allow" or "deny" for the action that should
                        be taken if this intention matches a request.
                      type: string
                    description:
                      description: Description for the intention. This is not used
                        by Consul, but is presented in API responses to assist tooling.
                      type: string
                    name:
                      description: Name is the source of the intention. This is the
                        name of a Consul service. The service doesn't need to be registered.
                      type: string
                    namespace:
                      description: Namespace is the namespace for the Name parameter.
                      type: string
                    partition:
                      description: Partition is the Admin Partition for the Name parameter.
                      type: string
                    peer:
                      description: '[Experimental] Peer is the peer name for the Name
                        parameter.'
                      type: string
                    permissions:
                      description: Permissions is the list of all additional L7 attributes
                        that extend the intention match criteria. Permission precedence
                        is applied top to bottom. For any given request the first
                        permission to match in the list is terminal and stops further
                        evaluation. As with L4 intentions, traffic that fails to match
                        any of the provided permissions in this intention will be
                        subject to the default intention behavior is defined by the
                        default ACL policy. This should be omitted for an L4 intention
                        as it is mutually exclusive with the Action field.
                      items:
                        properties:
                          action:
                            description: Action is one of "allow" or "deny" for the
                              action that should be taken if this permission matches
                              a request.
                            type: string
                          http:
                            description: HTTP is a set of HTTP-specific authorization
                              criteria.
                            properties:
                              header:
                                description: Header is a set of criteria that can
                                  match on HTTP request headers. If more than one
                                  is configured all must match for the overall match
                                  to apply.
                                items:
                                  properties:
                                    exact:
                                      description: Exact matches if the header with
                                        the given name is this value.
                                      type: string
                                    invert:
                                      description: Invert inverts the logic of the
                                        match.
                                      type: boolean
                                    name:
                                      description: Name is the name of the header
                                        to match.
                                      type: string
                                    prefix:
                                      description: Prefix matches if the header with
                                        the given name has this prefix.
                                      type: string
                                    present:
                                      description: Present matches if the header with
                                        the given name is present with any value.
                                      type: boolean
                                    regex:
                                      description: Regex matches if the header with
                                        the given name matches this pattern.
                                      type: string
                                    suffix:
                                      description: Suffix matches if the header with
                                        the given name has this suffix.
                                      type: string
                                  type: object
                                type: array
                              methods:
                                description: Methods is a list of HTTP methods for
                                  which this match applies. If unspecified all HTTP
                                  methods are matched. If provided the names must
                                  be a valid method.
                                items:
                                  type: string
                                type: array
                              pathExact:
                                description: PathExact is the exact path to match
                                  on the HTTP request path.
                                type: string
                              pathPrefix:
                                description: PathPrefix is the path prefix to match
                                  on the HTTP request path.
                                type: string
                              pathRegex:
                                description: PathRegex is the regular expression to
                                  match on the HTTP request path.
                                type: string
                            type: object
                        type: object
                      type: array
                  type: object
                type: array
            type: object
          status:
            properties:
              conditions:
                description: Conditions indicate the latest available observations
                  of a resource's current state.
                items:
                  description: 'Conditions define a readiness condition for a Consul
                    resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              lastSyncedTime:
                description: LastSyncedTime is the last time the resource successfully
                  synced with Consul.
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: consul/templates/crd-serviceresolvers.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: serviceresolvers.consul.hashicorp.com
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: crd
spec:
  group: consul.hashicorp.com
  names:
    kind: ServiceResolver
    listKind: ServiceResolverList
    plural: serviceresolvers
    shortNames:
    - service-resolver
    singular: serviceresolver
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The sync status of the resource with Consul
      jsonPath: .status.conditions[?(@.type=="Synced")].status
      name: Synced
      type: string
    - description: The last successful synced time of the resource with Consul
      jsonPath: .status.lastSyncedTime
      name: Last Synced
      type: date
    - description: The age of the resource
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ServiceResolver is the Schema for the serviceresolvers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ServiceResolverSpec defines the desired state of ServiceResolver.
            properties:
              connectTimeout:
                description: ConnectTimeout is the timeout for establishing new network
                  connections to this service.
                type: string
              defaultSubset:
                description: DefaultSubset is the subset to use when no explicit subset
                  is requested. If empty the unnamed subset is used.
                type: string
              failover:
                additionalProperties:
                  properties:
                    datacenters:
                      description: Datacenters is a fixed list of datacenters to try
                        during failover.
                      items:
                        type: string
                      type: array
                    namespace:
                      description: Namespace is the namespace to resolve the requested
                        service from to form the failover group of instances. If empty
                        the current namespace is used.
                      type: string
                    service:
                      description: Service is the service to resolve instead of the
                        default as the failover group of instances during failover.
                      type: string
                    serviceSubset:
                      description: ServiceSubset is the named subset of the requested
                        service to resolve as the failover group of instances. If
                        empty the default subset for the requested service is used.
                      type: string
                    targets:
                      description: Targets specifies a fixed list of failover targets
                        to try during failover.
                      items:
                        properties:
                          datacenter:
                            description: Datacenter specifies the datacenter to try
                              during failover.
                            type: string
                          namespace:
                            description: Namespace specifies the namespace to try
                              during failover.
                            type: string
                          partition:
                            description: Partition specifies the partition to try
                              during failover.
                            type: string
                          peer:
                            description: Peer specifies the name of the cluster peer
                              to try during failover.
                            type: string
                          service:
                            description: Service specifies the name of the service
                              to try during failover.
                            type: string
                          serviceSubset:
                            description: ServiceSubset specifies the service subset
                              to try during failover.
                            type: string
                        type: object
                      type: array
                  type: object
                description: Failover controls when and how to reroute traffic to
                  an alternate pool of service instances. The map is keyed by the
                  service subset it applies to and the special string "*" is a wildcard
                  that applies to any subset not otherwise specified here.
                type: object
              loadBalancer:
                description: LoadBalancer determines the load balancing policy and
                  configuration for services issuing requests to this upstream service.
                properties:
                  hashPolicies:
                    description: HashPolicies is a list of hash policies to use for
                      hashing load balancing algorithms. Hash policies are evaluated
                      individually and combined such that identical lists result in
                      the same hash. If no hash policies are present, or none are
                      successfully evaluated, then a random backend host will be selected.
                    items:
                      properties:
                        cookieConfig:
                          description: CookieConfig contains configuration for the
                            "cookie" hash policy type.
                          properties:
                            path:
                              description: Path is the path to set for the cookie.
                              type: string
                            session:
                              description: Session determines whether to generate
                                a session cookie with no expiration.
                              type: boolean
                            ttl:
                              description: TTL is the ttl for generated cookies. Cannot
                                be specified for session cookies.
                              type: string
                          type: object
                        field:
                          description: Field is the attribute type to hash on. Must
                            be one of "header", "cookie", or "query_parameter". Cannot
                            be specified along with sourceIP.
                          type: string
                        fieldValue:
                          description: FieldValue is the value to hash. ie. header
                            name, cookie name, URL query parameter name Cannot be
                            specified along with sourceIP.
                          type: string
                        sourceIP:
                          description: SourceIP determines whether the hash should
                            be of the source IP rather than of a field and field value.
                            Cannot be specified along with field or fieldValue.
                          type: boolean
                        terminal:
                          description: Terminal will short circuit the computation
                            of the hash when multiple hash policies are present. If
                            a hash is computed when a Terminal policy is evaluated,
                            then that hash will be used and subsequent hash policies
                            will be ignored.
                          type: boolean
                      type: object
                    type: array
                  leastRequestConfig:
                    description: LeastRequestConfig contains configuration for the
                      "leastRequest" policy type.
                    properties:
                      choiceCount:
                        description: ChoiceCount determines the number of random healthy
                          hosts from which to select the one with the least requests.
                        format: int32
                        type: integer
                    type: object
                  policy:
                    description: Policy is the load balancing policy used to select
                      a host.
                    type: string
                  ringHashConfig:
                    description: RingHashConfig contains configuration for the "ringHash"
                      policy type.
                    properties:
                      maximumRingSize:
                        description: MaximumRingSize determines the maximum number
                          of entries in the hash ring.
                        format: int64
                        type: integer
                      minimumRingSize:
                        description: MinimumRingSize determines the minimum number
                          of entries in the hash ring.
                        format: int64
                        type: integer
                    type: object
                type: object
              redirect:
                description: Redirect when configured, all attempts to resolve the
                  service this resolver defines will be substituted for the supplied
                  redirect EXCEPT when the redirect has already been applied. When
                  substituting the supplied redirect, all other fields besides Kind,
                  Name, and Redirect will be ignored.
                properties:
                  datacenter:
                    description: Datacenter is the datacenter to resolve the service
                      from instead of the current one.
                    type: string
                  namespace:
                    description: Namespace is the Consul namespace to resolve the
                      service from instead of the current namespace. If empty the
                      current namespace is assumed.
                    type: string
                  partition:
                    description: Partition is the Consul partition to resolve the
                      service from instead of the current partition. If empty the
                      current partition is assumed.
                    type: string
                  peer:
                    description: Peer is the name of the cluster peer to resolve the
                      service from instead of the current one.
                    type: string
                  service:
                    description: Service is a service to resolve instead of the current
                      service.
                    type: string
                  serviceSubset:
                    description: ServiceSubset is a named subset of the given service
                      to resolve instead of one defined as that service's DefaultSubset
                      If empty the default subset is used.
                    type: string
                type: object
              subsets:
                additionalProperties:
                  properties:
                    filter:
                      description: Filter is the filter expression to be used for
                        selecting instances of the requested service. If empty all
                        healthy instances are returned. This expression can filter
                        on the same selectors as the Health API endpoint.
                      type: string
                    onlyPassing:
                      description: OnlyPassing specifies the behavior of the resolver's
                        health check interpretation. If this is set to false, instances
                        with checks in the passing as well as the warning states will
                        be considered healthy. If this is set to true, only instances
                        with checks in the passing state will be considered healthy.
                      type: boolean
                  type: object
                description: Subsets is map of subset name to subset definition for
                  all usable named subsets of this service. The map key is the name
                  of the subset and all names must be valid DNS subdomain elements.
                  This may be empty, in which case only the unnamed default subset
                  will be usable.
                type: object
            type: object
          status:
            properties:
              conditions:
                description: Conditions indicate the latest available observations
                  of a resource's current state.
                items:
                  description: 'Conditions define a readiness condition for a Consul
                    resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              lastSyncedTime:
                description: LastSyncedTime is the last time the resource successfully
                  synced with Consul.
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: consul/templates/crd-servicerouters.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: servicerouters.consul.hashicorp.com
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: crd
spec:
  group: consul.hashicorp.com
  names:
    kind: ServiceRouter
    listKind: ServiceRouterList
    plural: servicerouters
    shortNames:
    - service-router
    singular: servicerouter
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The sync status of the resource with Consul
      jsonPath: .status.conditions[?(@.type=="Synced")].status
      name: Synced
      type: string
    - description: The last successful synced time of the resource with Consul
      jsonPath: .status.lastSyncedTime
      name: Last Synced
      type: date
    - description: The age of the resource
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ServiceRouter is the Schema for the servicerouters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ServiceRouterSpec defines the desired state of ServiceRouter.
            properties:
              routes:
                description: Routes are the list of routes to consider when processing
                  L7 requests. The first route to match in the list is terminal and
                  stops further evaluation. Traffic that fails to match any of the
                  provided routes will be routed to the default service.
                items:
                  properties:
                    destination:
                      description: Destination controls how to proxy the matching
                        request(s) to a service.
                      properties:
                        namespace:
                          description: Namespace is the Consul namespace to resolve
                            the service from instead of the current namespace. If
                            empty the current namespace is assumed.
                          type: string
                        numRetries:
                          description: NumRetries is the number of times to retry
                            the request when a retryable result occurs
                          format: int32
                          type: integer
                        partition:
                          description: Partition is the Consul partition to resolve
                            the service from instead of the current partition. If
                            empty the current partition is assumed.
                          type: string
                        prefixRewrite:
                          description: PrefixRewrite defines how to rewrite the HTTP
                            request path before proxying it to its final destination.
                            This requires that either match.http.pathPrefix or match.http.pathExact
                            be configured on this route.
                          type: string
                        requestHeaders:
                          description: Allow HTTP header manipulation to be configured.
                          properties:
                            add:
                              additionalProperties:
                                type: string
                              description: Add is a set of name -> value pairs that
                                should be appended to the request or response (i.e.
                                allowing duplicates if the same header already exists).
                              type: object
                            remove:
                              description: Remove is the set of header names that
                                should be stripped from the request or response.
                              items:
                                type: string
                              type: array
                            set:
                              additionalProperties:
                                type: string
                              description: Set is a set of name -> value pairs that
                                should be added to the request or response, overwriting
                                any existing header values of the same name.
                              type: object
                          type: object
                        requestTimeout:
                          description: RequestTimeout is the total amount of time
                            permitted for the entire downstream request (and retries)
                            to be processed.
                          type: string
                        responseHeaders:
                          description: HTTPHeaderModifiers is a set of rules for HTTP
                            header modification that should be performed by proxies
                            as the request passes through them. It can operate on
                            either request or response headers depending on the context
                            in which it is used.
                          properties:
                            add:
                              additionalProperties:
                                type: string
                              description: Add is a set of name -> value pairs that
                                should be appended to the request or response (i.e.
                                allowing duplicates if the same header already exists).
                              type: object
                            remove:
                              description: Remove is the set of header names that
                                should be stripped from the request or response.
                              items:
                                type: string
                              type: array
                            set:
                              additionalProperties:
                                type: string
                              description: Set is a set of name -> value pairs that
                                should be added to the request or response, overwriting
                                any existing header values of the same name.
                              type: object
                          type: object
                        retryOnConnectFailure:
                          description: RetryOnConnectFailure allows for connection
                            failure errors to trigger a retry.
                          type: boolean
                        retryOnStatusCodes:
                          description: RetryOnStatusCodes is a flat list of http response
                            status codes that are eligible for retry.
                          items:
                            format: int32
                            type: integer
                          type: array
                        service:
                          description: Service is the service to resolve instead of
                            the default service. If empty then the default service
                            name is used.
                          type: string
                        serviceSubset:
                          description: ServiceSubset is a named subset of the given
                            service to resolve instead of the one defined as that
                            service's DefaultSubset. If empty, the default subset
                            is used.
                          type: string
                      type: object
                    match:
                      description: Match is a set of criteria that can match incoming
                        L7 requests. If empty or omitted it acts as a catch-all.
                      properties:
                        http:
                          description: HTTP is a set of http-specific match criteria.
                          properties:
                            header:
                              description: Header is a set of criteria that can match
                                on HTTP request headers. If more than one is configured
                                all must match for the overall match to apply.
                              items:
                                properties:
                                  exact:
                                    description: Exact will match if the header with
                                      the given name is this value.
                                    type: string
                                  invert:
                                    description: Invert inverts the logic of the match.
                                    type: boolean
                                  name:
                                    description: Name is the name of the header to
                                      match.
                                    type: string
                                  prefix:
                                    description: Prefix will match if the header with
                                      the given name has this prefix.
                                    type: string
                                  present:
                                    description: Present will match if the header
                                      with the given name is present with any value.
                                    type: boolean
                                  regex:
                                    description: Regex will match if the header with
                                      the given name matches this pattern.
                                    type: string
                                  suffix:
                                    description: Suffix will match if the header with
                                      the given name has this suffix.
                                    type: string
                                required:
                                - name
                                type: object
                              type: array
                            methods:
                              description: Methods is a list of HTTP methods for which
                                this match applies. If unspecified all http methods
                                are matched.
                              items:
                                type: string
                              type: array
                            pathExact:
                              description: PathExact is an exact path to match on
                                the HTTP request path.
                              type: string
                            pathPrefix:
                              description: PathPrefix is a path prefix to match on
                                the HTTP request path.
                              type: string
                            pathRegex:
                              description: PathRegex is a regular expression to match
                                on the HTTP request path.
                              type: string
                            queryParam:
                              description: QueryParam is a set of criteria that can
                                match on HTTP query parameters. If more than one is
                                configured all must match for the overall match to
                                apply.
                              items:
                                properties:
                                  exact:
                                    description: Exact will match if the query parameter
                                      with the given name is this value.
                                    type: string
                                  name:
                                    description: Name is the name of the query parameter
                                      to match on.
                                    type: string
                                  present:
                                    description: Present will match if the query parameter
                                      with the given name is present with any value.
                                    type: boolean
                                  regex:
                                    description: Regex will match if the query parameter
                                      with the given name matches this pattern.
                                    type: string
                                required:
                                - name
                                type: object
                              type: array
                          type: object
                      type: object
                  type: object
                type: array
            type: object
          status:
            properties:
              conditions:
                description: Conditions indicate the latest available observations
                  of a resource's current state.
                items:
                  description: 'Conditions define a readiness condition for a Consul
                    resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              lastSyncedTime:
                description: LastSyncedTime is the last time the resource successfully
                  synced with Consul.
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: consul/templates/crd-servicesplitters.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: servicesplitters.consul.hashicorp.com
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: crd
spec:
  group: consul.hashicorp.com
  names:
    kind: ServiceSplitter
    listKind: ServiceSplitterList
    plural: servicesplitters
    shortNames:
    - service-splitter
    singular: servicesplitter
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The sync status of the resource with Consul
      jsonPath: .status.conditions[?(@.type=="Synced")].status
      name: Synced
      type: string
    - description: The last successful synced time of the resource with Consul
      jsonPath: .status.lastSyncedTime
      name: Last Synced
      type: date
    - description: The age of the resource
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ServiceSplitter is the Schema for the servicesplitters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ServiceSplitterSpec defines the desired state of ServiceSplitter.
            properties:
              splits:
                description: Splits defines how much traffic to send to which set
                  of service instances during a traffic split. The sum of weights
                  across all splits must add up to 100.
                items:
                  properties:
                    namespace:
                      description: Namespace is the Consul namespace to resolve the
                        service from instead of the current namespace. If empty the
                        current namespace is assumed.
                      type: string
                    partition:
                      description: Partition is the Consul partition to resolve the
                        service from instead of the current partition. If empty the
                        current partition is assumed.
                      type: string
                    requestHeaders:
                      description: Allow HTTP header manipulation to be configured.
                      properties:
                        add:
                          additionalProperties:
                            type: string
                          description: Add is a set of name -> value pairs that should
                            be appended to the request or response (i.e. allowing
                            duplicates if the same header already exists).
                          type: object
                        remove:
                          description: Remove is the set of header names that should
                            be stripped from the request or response.
                          items:
                            type: string
                          type: array
                        set:
                          additionalProperties:
                            type: string
                          description: Set is a set of name -> value pairs that should
                            be added to the request or response, overwriting any existing
                            header values of the same name.
                          type: object
                      type: object
                    responseHeaders:
                      description: HTTPHeaderModifiers is a set of rules for HTTP
                        header modification that should be performed by proxies as
                        the request passes through them. It can operate on either
                        request or response headers depending on the context in which
                        it is used.
                      properties:
                        add:
                          additionalProperties:
                            type: string
                          description: Add is a set of name -> value pairs that should
                            be appended to the request or response (i.e. allowing
                            duplicates if the same header already exists).
                          type: object
                        remove:
                          description: Remove is the set of header names that should
                            be stripped from the request or response.
                          items:
                            type: string
                          type: array
                        set:
                          additionalProperties:
                            type: string
                          description: Set is a set of name -> value pairs that should
                            be added to the request or response, overwriting any existing
                            header values of the same name.
                          type: object
                      type: object
                    service:
                      description: Service is the service to resolve instead of the
                        default.
                      type: string
                    serviceSubset:
                      description: ServiceSubset is a named subset of the given service
                        to resolve instead of one defined as that service's DefaultSubset.
                        If empty the default subset is used.
                      type: string
                    weight:
                      description: Weight is a value between 0 and 100 reflecting
                        what portion of traffic should be directed to this split.
                        The smallest representable weight is 1/10000 or .01%.
                      type: number
                  type: object
                type: array
            type: object
          status:
            properties:
              conditions:
                description: Conditions indicate the latest available observations
                  of a resource's current state.
                items:
                  description: 'Conditions define a readiness condition for a Consul
                    resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              lastSyncedTime:
                description: LastSyncedTime is the last time the resource successfully
                  synced with Consul.
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: consul/templates/crd-terminatinggateways.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: terminatinggateways.consul.hashicorp.com
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: crd
spec:
  group: consul.hashicorp.com
  names:
    kind: TerminatingGateway
    listKind: TerminatingGatewayList
    plural: terminatinggateways
    shortNames:
    - terminating-gateway
    singular: terminatinggateway
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The sync status of the resource with Consul
      jsonPath: .status.conditions[?(@.type=="Synced")].status
      name: Synced
      type: string
    - description: The last successful synced time of the resource with Consul
      jsonPath: .status.lastSyncedTime
      name: Last Synced
      type: date
    - description: The age of the resource
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: TerminatingGateway is the Schema for the terminatinggateways
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TerminatingGatewaySpec defines the desired state of TerminatingGateway.
            properties:
              services:
                description: Services is a list of service names represented by the
                  terminating gateway.
                items:
                  description: A LinkedService is a service represented by a terminating
                    gateway.
                  properties:
                    caFile:
                      description: CAFile is the optional path to a CA certificate
                        to use for TLS connections from the gateway to the linked
                        service.
                      type: string
                    certFile:
                      description: CertFile is the optional path to a client certificate
                        to use for TLS connections from the gateway to the linked
                        service.
                      type: string
                    keyFile:
                      description: KeyFile is the optional path to a private key to
                        use for TLS connections from the gateway to the linked service.
                      type: string
                    name:
                      description: Name is the name of the service, as defined in
                        Consul's catalog.
                      type: string
                    namespace:
                      description: The namespace the service is registered in.
                      type: string
                    sni:
                      description: SNI is the optional name to specify during the
                        TLS handshake with a linked service.
                      type: string
                  type: object
                type: array
            type: object
          status:
            properties:
              conditions:
                description: Conditions indicate the latest available observations
                  of a resource's current state.
                items:
                  description: 'Conditions define a readiness condition for a Consul
                    resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              lastSyncedTime:
                description: LastSyncedTime is the last time the resource successfully
                  synced with Consul.
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: consul/templates/connect-inject-clusterrole.yaml
# The ClusterRole to enable the Connect injector to get, list, watch and patch MutatingWebhookConfiguration.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: consul-consul-connect-injector
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: connect-injector
rules:
- apiGroups:
  - consul.hashicorp.com
  resources:
  - servicedefaults
  - serviceresolvers
  - proxydefaults
  - meshes
  - exportedservices
  - servicerouters
  - servicesplitters
  - serviceintentions
  - ingressgateways
  - terminatinggateways
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - consul.hashicorp.com
  resources:
  - servicedefaults/status
  - serviceresolvers/status
  - proxydefaults/status
  - meshes/status
  - exportedservices/status
  - servicerouters/status
  - servicesplitters/status
  - serviceintentions/status
  - ingressgateways/status
  - terminatinggateways/status
  verbs:
  - get
  - patch
  - update
- apiGroups: [ "" ]
  resources: [ "endpoints", "services", "namespaces", "nodes" ]
  verbs:
  - "get"
  - "list"
  - "watch"
- apiGroups: [ "" ]
  resources:
  - pods
  verbs:
  - "get"
  - "list"
  - "watch"
  - "update"
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - list
  - update
---
# Source: consul/templates/webhook-cert-manager-clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: consul-consul-webhook-cert-manager
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: webhook-cert-manager
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  verbs:
  - get
  - list
  - watch
  - patch
- apiGroups:
  - apps
  resources:
  - deployments
  resourceNames:
  - consul-consul-webhook-cert-manager
  verbs:
  - get
---
# Source: consul/templates/connect-inject-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: consul-consul-connect-injector
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: connect-injector
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: consul-consul-connect-injector
subjects:
- kind: ServiceAccount
  name: consul-consul-connect-injector
  namespace: vault
---
# Source: consul/templates/webhook-cert-manager-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: consul-consul-webhook-cert-manager
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: webhook-cert-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: consul-consul-webhook-cert-manager
subjects:
- kind: ServiceAccount
  name: consul-consul-webhook-cert-manager
  namespace: vault
---
# Source: consul/templates/client-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: consul-consul-client
  namespace: vault
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: client
rules: []
---
# Source: consul/templates/connect-inject-leader-election-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: consul-consul-connect-inject-leader-election
  namespace: vault
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: connect-injector
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
# Source: consul/templates/server-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: consul-consul-server
  namespace: vault
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: server
rules: []
---
# Source: consul/templates/client-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: consul-consul-client
  namespace: vault
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: client
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: consul-consul-client
subjects:
  - kind: ServiceAccount
    name: consul-consul-client
---
# Source: consul/templates/connect-inject-leader-election-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: consul-consul-connect-inject-leader-election
  namespace: vault
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: connect-injector
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: consul-consul-connect-inject-leader-election
subjects:
- kind: ServiceAccount
  name: consul-consul-connect-injector
  namespace: vault
---
# Source: consul/templates/server-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: consul-consul-server
  namespace: vault
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: server
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: consul-consul-server
subjects:
  - kind: ServiceAccount
    name: consul-consul-server
---
# Source: consul/templates/connect-inject-service.yaml
# The service for the Connect sidecar injector
apiVersion: v1
kind: Service
metadata:
  name: consul-consul-connect-injector
  namespace: vault
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: connect-injector
spec:
  ports:
  - port: 443
    targetPort: 8080
  selector:
    app: consul
    release: "consul"
    component: connect-injector
---
# Source: consul/templates/dns-service.yaml
# Service for Consul DNS.
apiVersion: v1
kind: Service
metadata:
  name: consul-consul-dns
  namespace: vault
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: dns
spec:
  type: ClusterIP
  ports:
    - name: dns-tcp
      port: 53
      protocol: "TCP"
      targetPort: dns-tcp
    - name: dns-udp
      port: 53
      protocol: "UDP"
      targetPort: dns-udp
  selector:
    app: consul
    release: "consul"
    hasDNS: "true"
---
# Source: consul/templates/server-service.yaml
# Headless service for Consul server DNS entries. This service should only
# point to Consul servers. For access to an agent, one should assume that
# the agent is installed locally on the node and the NODE_IP should be used.
# If the node can't run a Consul agent, then this service can be used to
# communicate directly to a server agent.
apiVersion: v1
kind: Service
metadata:
  name: consul-consul-server
  namespace: vault
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: server
  annotations:
spec:
  clusterIP: None
  # We want the servers to become available even if they're not ready
  # since this DNS is also used for join operations.
  publishNotReadyAddresses: true
  ports:
    - name: http
      port: 8500
      targetPort: 8500
    - name: grpc
      port: 8502
      targetPort: 8502
    - name: serflan-tcp
      protocol: "TCP"
      port: 8301
      targetPort: 8301
    - name: serflan-udp
      protocol: "UDP"
      port: 8301
      targetPort: 8301
    - name: serfwan-tcp
      protocol: "TCP"
      port: 8302
      targetPort: 8302
    - name: serfwan-udp
      protocol: "UDP"
      port: 8302
      targetPort: 8302
    - name: server
      port: 8300
      targetPort: 8300
    - name: dns-tcp
      protocol: "TCP"
      port: 8600
      targetPort: dns-tcp
    - name: dns-udp
      protocol: "UDP"
      port: 8600
      targetPort: dns-udp
  selector:
    app: consul
    release: "consul"
    component: server
---
# Source: consul/templates/ui-service.yaml
# UI Service for Consul Server
apiVersion: v1
kind: Service
metadata:
  name: consul-consul-ui
  namespace: vault
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: ui
spec:
  selector:
    app: consul
    release: "consul"
    component: server
  ports:
    - name: http
      port: 80
      targetPort: 8500
---
# Source: consul/templates/client-daemonset.yaml
# DaemonSet to run the Consul clients on every node.
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: consul-consul-client
  namespace: vault
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: client
spec:
  selector:
    matchLabels:
      app: consul
      chart: consul-helm
      release: consul
      component: client
      hasDNS: "true"
  template:
    metadata:
      labels:
        app: consul
        chart: consul-helm
        release: consul
        component: client
        hasDNS: "true"
      annotations:
        "consul.hashicorp.com/connect-inject": "false"
        "consul.hashicorp.com/config-checksum": 552c5e0515d2dd99703930c9ab6ed5d0edab635a4eb89a9f1f2fbdb1a6fdeafa
    spec:
      terminationGracePeriodSeconds: 10
      serviceAccountName: consul-consul-client
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 100

      volumes:
        - name: data
          emptyDir: {}
        - name: config
          configMap:
            name: consul-consul-client-config
        - name: extra-config
          emptyDir: {}
        - name: consul-data
          emptyDir:
            medium: "Memory"
      containers:
        - name: consul
          image: "hashicorp/consul:1.15.0"
          env:
            - name: ADVERTISE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: NODE
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: CONSUL_DISABLE_PERM_MGMT
              value: "true"
            
          command:
            - "/bin/sh"
            - "-ec"
            - |
              CONSUL_FULLNAME="consul-consul"

              cp /consul/config/extra-from-values.json /consul/extra-config/extra-from-values.json
              [ -n "${HOST_IP}" ] && sed -Ei "s|HOST_IP|${HOST_IP?}|g" /consul/extra-config/extra-from-values.json
              [ -n "${POD_IP}" ] && sed -Ei "s|POD_IP|${POD_IP?}|g" /consul/extra-config/extra-from-values.json
              [ -n "${HOSTNAME}" ] && sed -Ei "s|HOSTNAME|${HOSTNAME?}|g" /consul/extra-config/extra-from-values.json

              exec /usr/local/bin/docker-entrypoint.sh consul agent \
                -node="${NODE}" \
                -advertise="${ADVERTISE_IP}" \
                -bind=0.0.0.0 \
                -client=0.0.0.0 \
                -node-meta=host-ip:${HOST_IP} \
                -node-meta=pod-name:${HOSTNAME} \
                -hcl='leave_on_terminate = true' \
                -hcl='ports { grpc = 8502, grpc_tls = -1 }' \
                -config-dir=/consul/config \
                -datacenter=vault-kubernetes-guide \
                -data-dir=/consul/data \
                -retry-join="${CONSUL_FULLNAME}-server-0.${CONSUL_FULLNAME}-server.${NAMESPACE}.svc:8301" \
                -config-file=/consul/extra-config/extra-from-values.json \
                -domain=consul
          volumeMounts:
            - name: data
              mountPath: /consul/data
            - name: config
              mountPath: /consul/config
            - name: extra-config
              mountPath: /consul/extra-config
            - mountPath: /consul/login
              name: consul-data
              readOnly: true
          ports:
            - containerPort: 8500
              hostPort: 8500
              name: http
            - containerPort: 8502
              hostPort: 8502
              name: grpc
            - containerPort: 8301
              protocol: "TCP"
              name: serflan-tcp
            - containerPort: 8301
              protocol: "UDP"
              name: serflan-udp
            - containerPort: 8600
              name: dns-tcp
              protocol: "TCP"
            - containerPort: 8600
              name: dns-udp
              protocol: "UDP"
          readinessProbe:
            # NOTE(mitchellh): when our HTTP status endpoints support the
            # proper status codes, we should switch to that. This is temporary.
            exec:
              command:
                - "/bin/sh"
                - "-ec"
                - |
                  curl http://127.0.0.1:8500/v1/status/leader \
                  2>/dev/null | grep -E '".+"'
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            null
---
# Source: consul/templates/connect-inject-deployment.yaml
# The deployment for running the Connect sidecar injector
apiVersion: apps/v1
kind: Deployment
metadata:
  name: consul-consul-connect-injector
  namespace: vault
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: connect-injector
spec:
  replicas: 1
  selector:
    matchLabels:
      app: consul
      chart: consul-helm
      release: consul
      component: connect-injector
  template:
    metadata:
      labels:
        app: consul
        chart: consul-helm
        release: consul
        component: connect-injector
      annotations:
        "consul.hashicorp.com/connect-inject": "false"
    spec:
      serviceAccountName: consul-consul-connect-injector
      containers:
        - name: sidecar-injector
          image: "hashicorp/consul-k8s-control-plane:1.1.0"
          ports:
            - containerPort: 8080
              name: webhook-server
              protocol: TCP
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: CONSUL_ADDRESSES
              value: consul-consul-server.vault.svc
            - name: CONSUL_GRPC_PORT
              value: "8502"
            - name: CONSUL_HTTP_PORT
              value: "8500"
            - name: CONSUL_DATACENTER
              value: vault-kubernetes-guide
            - name: CONSUL_API_TIMEOUT
              value: 5s
          command:
            - "/bin/sh"
            - "-ec"
            - |
              consul-k8s-control-plane inject-connect \
                -log-level=info \
                -log-json=false \
                -default-inject=false \
                -consul-image="hashicorp/consul:1.15.0" \
                -consul-dataplane-image="hashicorp/consul-dataplane:1.1.0" \
                -consul-k8s-image="hashicorp/consul-k8s-control-plane:1.1.0" \
                -release-name="consul" \
                -release-namespace="vault" \
                -resource-prefix=consul-consul \
                -listen=:8080 \
                -default-enable-transparent-proxy=true \
                -enable-cni=false \
                -transparent-proxy-default-overwrite-probes=true \
                -enable-consul-dns=true \
                -default-enable-metrics=false \
                -enable-gateway-metrics=true  \
                -default-enable-metrics-merging=false  \
                -default-merged-metrics-port=20100 \
                -default-prometheus-scrape-port=20200 \
                -default-prometheus-scrape-path="/metrics" \
                -allow-k8s-namespace="*" \
                -tls-cert-dir=/etc/connect-injector/certs \
                -default-envoy-proxy-concurrency=2 \
                -init-container-memory-limit=150Mi \
                -init-container-memory-request=25Mi \
                -init-container-cpu-limit=50m \
                -init-container-cpu-request=50m \
          startupProbe:
            httpGet:
              path: /readyz/ready
              port: 9445
              scheme: HTTP
            initialDelaySeconds: 30
            failureThreshold: 15
            periodSeconds: 2
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /readyz/ready
              port: 9445
              scheme: HTTP
            failureThreshold: 2
            initialDelaySeconds: 1
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /readyz/ready
              port: 9445
              scheme: HTTP
            failureThreshold: 2
            initialDelaySeconds: 2
            successThreshold: 1
            timeoutSeconds: 5
          volumeMounts:
            - name: certs
              mountPath: /etc/connect-injector/certs
              readOnly: true
          resources:
            limits:
              cpu: 50m
              memory: 50Mi
            requests:
              cpu: 50m
              memory: 50Mi
      volumes:
        - name: certs
          secret:
            defaultMode: 420
            secretName: consul-consul-connect-inject-webhook-cert
---
# Source: consul/templates/webhook-cert-manager-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: consul-consul-webhook-cert-manager
  namespace: vault
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: webhook-cert-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: consul
      chart: consul-helm
      heritage: Helm
      release: consul
      component: webhook-cert-manager
  template:
    metadata:
      labels:
        app: consul
        chart: consul-helm
        heritage: Helm
        release: consul
        component: webhook-cert-manager
      annotations:
        "consul.hashicorp.com/connect-inject": "false"
        "consul.hashicorp.com/config-checksum": bea4d8ae02a06923d1c876206542951ed5dd1ed180c497337bb92df7b9963e3d
    spec:
      containers:
      - command:
        - "/bin/sh"
        - "-ec"
        - |
          consul-k8s-control-plane webhook-cert-manager \
            -log-level=info \
            -log-json=false \
            -config-file=/bootstrap/config/webhook-config.json \
            -deployment-name=consul-consul-webhook-cert-manager \
            -deployment-namespace=vault
        image: hashicorp/consul-k8s-control-plane:1.1.0
        name: webhook-cert-manager
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 100m
            memory: 50Mi
        volumeMounts:
        - name: config
          mountPath: /bootstrap/config
      terminationGracePeriodSeconds: 10
      serviceAccountName: consul-consul-webhook-cert-manager
      volumes:
      - name: config
        configMap:
          name: consul-consul-webhook-cert-manager-config
---
# Source: consul/templates/server-statefulset.yaml
# StatefulSet to run the actual Consul server cluster.
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: consul-consul-server
  namespace: vault
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: server
spec:
  serviceName: consul-consul-server
  podManagementPolicy: Parallel
  replicas: 1
  selector:
    matchLabels:
      app: consul
      chart: consul-helm
      release: consul
      component: server
      hasDNS: "true"
  template:
    metadata:
      labels:
        app: consul
        chart: consul-helm
        release: consul
        component: server
        hasDNS: "true"
      annotations:
        "consul.hashicorp.com/connect-inject": "false"
        "consul.hashicorp.com/config-checksum": 7e9b57d3f4a3bc0e7dc7b9345926bb3a40b178c75b58c77ab0ddb6e7c4f62e0f
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: consul
                  release: "consul"
                  component: server
              topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 30
      serviceAccountName: consul-consul-server
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 100
      volumes:
        - name: config
          configMap:
            name: consul-consul-server-config
        - name: extra-config
          emptyDir: {}
      containers:
        - name: consul
          image: "hashicorp/consul:1.15.0"
          env:
            - name: ADVERTISE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: CONSUL_DISABLE_PERM_MGMT
              value: "true"
            
          command:
            - "/bin/sh"
            - "-ec"
            - |

              cp /consul/config/extra-from-values.json /consul/extra-config/extra-from-values.json
              [ -n "${HOST_IP}" ] && sed -Ei "s|HOST_IP|${HOST_IP?}|g" /consul/extra-config/extra-from-values.json
              [ -n "${POD_IP}" ] && sed -Ei "s|POD_IP|${POD_IP?}|g" /consul/extra-config/extra-from-values.json
              [ -n "${HOSTNAME}" ] && sed -Ei "s|HOSTNAME|${HOSTNAME?}|g" /consul/extra-config/extra-from-values.json

              exec /usr/local/bin/docker-entrypoint.sh consul agent \
                -advertise="${ADVERTISE_IP}" \
                -config-dir=/consul/config \
                -config-file=/consul/extra-config/extra-from-values.json
          volumeMounts:
            - name: data-vault
              mountPath: /consul/data
            - name: config
              mountPath: /consul/config
            - name: extra-config
              mountPath: /consul/extra-config
          ports:
            - name: http
              containerPort: 8500
            - name: grpc
              containerPort: 8502
              protocol: "TCP"
            - name: serflan-tcp
              containerPort: 8301
              protocol: "TCP"
            - name: serflan-udp
              containerPort: 8301
              protocol: "UDP"
            - name: serfwan-tcp
              containerPort: 8302
              protocol: "TCP"
            - name: serfwan-udp
              containerPort: 8302
              protocol: "UDP"
            - name: server
              containerPort: 8300
            - name: dns-tcp
              containerPort: 8600
              protocol: "TCP"
            - name: dns-udp
              containerPort: 8600
              protocol: "UDP"
          readinessProbe:
            # NOTE(mitchellh): when our HTTP status endpoints support the
            # proper status codes, we should switch to that. This is temporary.
            exec:
              command:
                - "/bin/sh"
                - "-ec"
                - |
                  curl http://127.0.0.1:8500/v1/status/leader \
                  2>/dev/null | grep -E '".+"'
            failureThreshold: 2
            initialDelaySeconds: 5
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            null
  volumeClaimTemplates:
    - metadata:
        name: data-vault
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
---
# Source: consul/templates/connect-inject-mutatingwebhookconfiguration.yaml
# The MutatingWebhookConfiguration to enable the Connect injector.
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: consul-consul-connect-injector
  namespace: vault
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
    component: connect-injector
webhooks:
- clientConfig:
    service:
      name: consul-consul-connect-injector
      namespace: vault
      path: /mutate-v1alpha1-proxydefaults
  failurePolicy: Fail
  admissionReviewVersions:
  - "v1beta1"
  - "v1"
  name: mutate-proxydefaults.consul.hashicorp.com
  rules:
  - apiGroups:
    - consul.hashicorp.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - proxydefaults
  sideEffects: None
- clientConfig:
    service:
      name: consul-consul-connect-injector
      namespace: vault
      path: /mutate-v1alpha1-mesh
  failurePolicy: Fail
  admissionReviewVersions:
  - "v1beta1"
  - "v1"
  name: mutate-mesh.consul.hashicorp.com
  rules:
  - apiGroups:
    - consul.hashicorp.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - meshes
  sideEffects: None
- clientConfig:
    service:
      name: consul-consul-connect-injector
      namespace: vault
      path: /mutate-v1alpha1-servicedefaults
  failurePolicy: Fail
  admissionReviewVersions:
  - "v1beta1"
  - "v1"
  name: mutate-servicedefaults.consul.hashicorp.com
  rules:
  - apiGroups:
    - consul.hashicorp.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - servicedefaults
  sideEffects: None
- clientConfig:
    service:
      name: consul-consul-connect-injector
      namespace: vault
      path: /mutate-v1alpha1-serviceresolver
  failurePolicy: Fail
  admissionReviewVersions:
  - "v1beta1"
  - "v1"
  name: mutate-serviceresolver.consul.hashicorp.com
  rules:
  - apiGroups:
    - consul.hashicorp.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - serviceresolvers
  sideEffects: None
- clientConfig:
    service:
      name: consul-consul-connect-injector
      namespace: vault
      path: /mutate-v1alpha1-servicerouter
  failurePolicy: Fail
  admissionReviewVersions:
  - "v1beta1"
  - "v1"
  name: mutate-servicerouter.consul.hashicorp.com
  rules:
  - apiGroups:
    - consul.hashicorp.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - servicerouters
  sideEffects: None
- clientConfig:
    service:
      name: consul-consul-connect-injector
      namespace: vault
      path: /mutate-v1alpha1-servicesplitter
  failurePolicy: Fail
  admissionReviewVersions:
  - "v1beta1"
  - "v1"
  name: mutate-servicesplitter.consul.hashicorp.com
  rules:
  - apiGroups:
    - consul.hashicorp.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - servicesplitters
  sideEffects: None
- clientConfig:
    service:
      name: consul-consul-connect-injector
      namespace: vault
      path: /mutate-v1alpha1-serviceintentions
  failurePolicy: Fail
  admissionReviewVersions:
  - "v1beta1"
  - "v1"
  name: mutate-serviceintentions.consul.hashicorp.com
  rules:
  - apiGroups:
    - consul.hashicorp.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - serviceintentions
  sideEffects: None
- clientConfig:
    service:
      name: consul-consul-connect-injector
      namespace: vault
      path: /mutate-v1alpha1-ingressgateway
  failurePolicy: Fail
  admissionReviewVersions:
  - "v1beta1"
  - "v1"
  name: mutate-ingressgateway.consul.hashicorp.com
  rules:
  - apiGroups:
    - consul.hashicorp.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - ingressgateways
  sideEffects: None
- clientConfig:
    service:
      name: consul-consul-connect-injector
      namespace: vault
      path: /mutate-v1alpha1-terminatinggateway
  failurePolicy: Fail
  admissionReviewVersions:
  - "v1beta1"
  - "v1"
  name: mutate-terminatinggateway.consul.hashicorp.com
  rules:
  - apiGroups:
    - consul.hashicorp.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - terminatinggateways
  sideEffects: None
- clientConfig:
    service:
      name: consul-consul-connect-injector
      namespace: vault
      path: /mutate-v1alpha1-exportedservices
  failurePolicy: Fail
  admissionReviewVersions:
  - "v1beta1"
  - "v1"
  name: mutate-exportedservices.consul.hashicorp.com
  rules:
  - apiGroups:
    - consul.hashicorp.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - exportedservices
  sideEffects: None
- name: consul-consul-connect-injector.consul.hashicorp.com
  # The webhook will fail scheduling all pods that are not part of consul if all replicas of the webhook are unhealthy.
  objectSelector:
    matchExpressions:
    - key: app
      operator: NotIn
      values: [ consul ]
  failurePolicy: Fail
  sideEffects: None
  admissionReviewVersions:
  - "v1beta1"
  - "v1"
  clientConfig:
    service:
      name: consul-consul-connect-injector
      namespace: vault
      path: "/mutate"
  rules:
  - operations: [ "CREATE" ]
    apiGroups: [ "" ]
    apiVersions: [ "v1" ]
    resources: [ "pods" ]
  namespaceSelector:
      matchExpressions:
        - key: "kubernetes.io/metadata.name"
          operator: "NotIn"
          values: ["kube-system","local-path-storage","openebs"]
---
# Source: consul/templates/tests/test-runner.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "consul-consul-test"
  namespace: vault
  labels:
    app: consul
    chart: consul-helm
    heritage: Helm
    release: consul
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: consul-test
      image: "hashicorp/consul:1.15.0"
      env:
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: CONSUL_HTTP_ADDR
          value: http://$(HOST_IP):8500
      command:
        - "/bin/sh"
        - "-ec"
        - |
            consul members | tee members.txt
            if [ $(grep -c consul-server members.txt) != $(grep consul-server members.txt | grep -c alive) ]
            then
              echo "Failed because not all consul servers are available"
              exit 1
            fi

  restartPolicy: Never
